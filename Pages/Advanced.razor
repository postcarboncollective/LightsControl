@page "/Advanced"
@using Page = LightsControl.Page
@using System.Security.Cryptography
@using Microsoft.AspNetCore.Mvc.RazorPages

<PageTitle>Advanced</PageTitle>

<center>
    <br/>
    <MudContainer>
        <MudButton OnClick="@(() => ShowStrobePanel = !ShowStrobePanel)" EndIcon="@(ShowStrobePanel ? Icons.Material.Filled.ArrowUpward : Icons.Material.Filled.ArrowDownward)">
            Strobe
        </MudButton>
        @if (ShowStrobePanel)
        {
            <MudContainer Style="background: #111f">
                <br/>
                <MudGrid>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.Red.Value">Red</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.Green.Value">Green</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.Blue.Value">Blue</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.White.Value">White</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.Brightness.Value">Brightness</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.Strobe.Value">Strobe</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.Switch.Value">Switch</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.Speed.Value">Speed</MudSlider>
                    </MudItem>
                </MudGrid>
            </MudContainer>
        }
    </MudContainer>
    <br/>
    <MudContainer>
        <MudButton OnClick="@(() => ShowParPanel = !ShowParPanel)" EndIcon="@(ShowParPanel ? Icons.Material.Filled.ArrowUpward : Icons.Material.Filled.ArrowDownward)">
            Par
        </MudButton>
        @if (ShowParPanel)
        {
            <MudContainer Style="background: #111f">
                <br/>
                <MudGrid>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Par.Brightness.Value">Brightness</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Par.Strobe">Strobe</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Par.UV">UV</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Par.Audio">Audio</MudSlider>
                    </MudItem>
                </MudGrid>
            </MudContainer>
        }
    </MudContainer>
    @foreach (var bar in PM.Bar)
    {
        <br/>
        <MudContainer>
            <MudButton OnClick="@(() => ShowBarPanel[PM.Bar.IndexOf(bar)] = !ShowBarPanel[PM.Bar.IndexOf(bar)])" EndIcon="@(ShowBarPanel[PM.Bar.IndexOf(bar)] ? Icons.Material.Filled.ArrowUpward : Icons.Material.Filled.ArrowDownward)">
                Bar @(PM.Bar.IndexOf(bar) + 1)
            </MudButton>
            @if (ShowBarPanel[PM.Bar.IndexOf(bar)])
            {
                <MudContainer Style="background: #111f">
                    <br/>
                    <MudGrid>
                        <MudItem xs="12">
                            <MudSlider Value="bar.Brightness[0].Value" ValueChanged="@((double x) => bar.SetBrightness((float)x))">Brightness</MudSlider>
                        </MudItem>
                        <MudItem xs="12">
                            <MudSlider Value="bar.Strobe[0].Value" ValueChanged="@((double x) => bar.SetStrobe((float)x))">Strobe</MudSlider>
                        </MudItem>
                        <MudItem xs="12">
                            <MudSlider Value="bar.Macro[0].Value" ValueChanged="@((double x) => bar.SetMacro((float)x))">Macro</MudSlider>
                        </MudItem>
                        <MudItem xs="12">
                            <MudSlider Value="bar.Red[0].Value" ValueChanged="@((double x) => bar.SetRed((float)x))">Red</MudSlider>
                        </MudItem>
                        <MudItem xs="12">
                            <MudSlider Value="bar.Green[0].Value" ValueChanged="@((double x) => bar.SetGreen((float)x))">Green</MudSlider>
                        </MudItem>
                        <MudItem xs="12">
                            <MudSlider Value="bar.Blue[0].Value" ValueChanged="@((double x) => bar.SetBlue((float)x))">Blue</MudSlider>
                        </MudItem>
                    </MudGrid>
                </MudContainer>
            }
        </MudContainer>
    }
</center>

@code {
    public bool ShowStrobePanel = false;
    public bool ShowParPanel = false;
    public List<bool> ShowBarPanel = new List<bool>() { false, false };

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Global.Page = Page.Advanced;
    }

}