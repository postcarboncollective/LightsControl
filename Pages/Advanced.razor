@page "/Advanced"
@using Page = LightsControl.Page
@using System.Security.Cryptography
@using Microsoft.AspNetCore.Mvc.RazorPages

<PageTitle>Advanced</PageTitle>

<center>
    <br/>
    <MudContainer>
        <MudButton OnClick="@(() => ShowStrobePanel = !ShowStrobePanel)" EndIcon="@(ShowStrobePanel ? Icons.Material.Filled.ArrowUpward : Icons.Material.Filled.ArrowDownward)">
            Strobe
        </MudButton>
        @if (ShowStrobePanel)
        {
            <MudContainer Style="background: #111f">
                <br/>
                <MudGrid>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.Red.Value">Red</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.Green.Value">Green</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.Blue.Value">Blue</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.White.Value">White</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.Brightness.Value">Brightness</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.Strobe.Value">Strobe</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.Switch.Value">Switch</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Strobe.Speed.Value">Speed</MudSlider>
                    </MudItem>
                </MudGrid>
            </MudContainer>
        }
    </MudContainer>
    <br/>
    <MudContainer>
        <MudButton OnClick="@(() => ShowParPanel = !ShowParPanel)" EndIcon="@(ShowParPanel ? Icons.Material.Filled.ArrowUpward : Icons.Material.Filled.ArrowDownward)">
            Par
        </MudButton>
        @if (ShowParPanel)
        {
            <MudContainer Style="background: #111f">
                <br/>
                <MudGrid>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Par.Brightness.Value">Brightness</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Par.Strobe.Value">Strobe</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Par.UV.Value">UV</MudSlider>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSlider @bind-Value="PM.Par.Audio.Value">Audio</MudSlider>
                    </MudItem>
                </MudGrid>
            </MudContainer>
        }
    </MudContainer>
    @foreach (var bar in PM.Bar)
    {
        <br/>
        <MudContainer>
            <MudButton OnClick="@(() => ShowBarPanel[PM.Bar.IndexOf(bar)] = !ShowBarPanel[PM.Bar.IndexOf(bar)])" EndIcon="@(ShowBarPanel[PM.Bar.IndexOf(bar)] ? Icons.Material.Filled.ArrowUpward : Icons.Material.Filled.ArrowDownward)">
                Bar @(PM.Bar.IndexOf(bar) + 1)
            </MudButton>
            @if (ShowBarPanel[PM.Bar.IndexOf(bar)])
            {
                <MudContainer Style="background: #111f">
                    <br/>
                    <MudGrid>
                        <MudItem xs="12">
                            <MudButton Style="text-transform:none" OnClick="@(() => ShowSingleBarPanel[PM.Bar.IndexOf(bar)][0] = !ShowSingleBarPanel[PM.Bar.IndexOf(bar)][0])" EndIcon="@(ShowSingleBarPanel[PM.Bar.IndexOf(bar)][0] ? Icons.Material.Filled.ArrowUpward : Icons.Material.Filled.ArrowDownward)">
                                Brightness
                            </MudButton>
                            @if (!ShowSingleBarPanel[PM.Bar.IndexOf(bar)][0])
                            {
                                <MudSlider Value="bar.Brightness[0].Value" ValueChanged="@((double x) => bar.SetBrightness((float)x))"/>
                            }
                            else
                            {
                                <MudContainer Style="background: #222f">
                                    @foreach (var brightness in bar.Brightness)
                                    {
                                        <MudSlider @bind-Value="bar.Brightness[bar.Brightness.IndexOf(brightness)].Value">Brightness @(bar.Brightness.IndexOf(brightness) + 1)</MudSlider>
                                    }
                                </MudContainer>
                            }
                        </MudItem>
                        <MudItem xs="12">
                            <MudButton Style="text-transform:none" OnClick="@(() => ShowSingleBarPanel[PM.Bar.IndexOf(bar)][1] = !ShowSingleBarPanel[PM.Bar.IndexOf(bar)][1])" EndIcon="@(ShowSingleBarPanel[PM.Bar.IndexOf(bar)][1] ? Icons.Material.Filled.ArrowUpward : Icons.Material.Filled.ArrowDownward)">
                                Strobe
                            </MudButton>
                            @if (!ShowSingleBarPanel[PM.Bar.IndexOf(bar)][1])
                            {
                                <MudSlider Value="bar.Strobe[0].Value" ValueChanged="@((double x) => bar.SetStrobe((float)x))"/>
                            }
                            else
                            {
                                <MudContainer Style="background: #222f">
                                    @foreach (var strobe in bar.Strobe)
                                    {
                                        <MudSlider @bind-Value="bar.Strobe[bar.Strobe.IndexOf(strobe)].Value">Strobe @(bar.Strobe.IndexOf(strobe) + 1)</MudSlider>
                                    }
                                </MudContainer>
                            }
                        </MudItem>
                        <MudItem xs="12">
                            <MudButton Style="text-transform:none" OnClick="@(() => ShowSingleBarPanel[PM.Bar.IndexOf(bar)][5] = !ShowSingleBarPanel[PM.Bar.IndexOf(bar)][5])" EndIcon="@(ShowSingleBarPanel[PM.Bar.IndexOf(bar)][5] ? Icons.Material.Filled.ArrowUpward : Icons.Material.Filled.ArrowDownward)">
                                Macro
                            </MudButton>
                            @if (!ShowSingleBarPanel[PM.Bar.IndexOf(bar)][5])
                            {
                                <MudSlider Value="bar.Macro[0].Value" ValueChanged="@((double x) => bar.SetMacro((float)x))"/>
                            }
                            else
                            {
                                <MudContainer Style="background: #222f">
                                    @foreach (var macro in bar.Macro)
                                    {
                                        <MudSlider @bind-Value="bar.Macro[bar.Macro.IndexOf(macro)].Value">Macro @(bar.Macro.IndexOf(macro) + 1)</MudSlider>
                                    }
                                </MudContainer>
                            }
                        </MudItem>
                        <MudItem xs="12">
                            <MudButton Style="text-transform:none" OnClick="@(() => ShowSingleBarPanel[PM.Bar.IndexOf(bar)][2] = !ShowSingleBarPanel[PM.Bar.IndexOf(bar)][2])" EndIcon="@(ShowSingleBarPanel[PM.Bar.IndexOf(bar)][2] ? Icons.Material.Filled.ArrowUpward : Icons.Material.Filled.ArrowDownward)">
                                Red
                            </MudButton>
                            @if (!ShowSingleBarPanel[PM.Bar.IndexOf(bar)][2])
                            {
                                <MudSlider Value="bar.Red[0].Value" ValueChanged="@((double x) => bar.SetRed((float)x))"/>
                            }
                            else
                            {
                                <MudContainer Style="background: #222f">
                                    @foreach (var red in bar.Red)
                                    {
                                        <MudSlider @bind-Value="bar.Red[bar.Red.IndexOf(red)].Value">Red @(bar.Red.IndexOf(red) + 1)</MudSlider>
                                    }
                                </MudContainer>
                            }
                        </MudItem>
                        <MudItem xs="12">
                            <MudButton Style="text-transform:none" OnClick="@(() => ShowSingleBarPanel[PM.Bar.IndexOf(bar)][3] = !ShowSingleBarPanel[PM.Bar.IndexOf(bar)][3])" EndIcon="@(ShowSingleBarPanel[PM.Bar.IndexOf(bar)][3] ? Icons.Material.Filled.ArrowUpward : Icons.Material.Filled.ArrowDownward)">
                                Green
                            </MudButton>
                            @if (!ShowSingleBarPanel[PM.Bar.IndexOf(bar)][3])
                            {
                                <MudSlider Value="bar.Green[0].Value" ValueChanged="@((double x) => bar.SetGreen((float)x))"/>
                            }
                            else
                            {
                                <MudContainer Style="background: #222f">
                                    @foreach (var green in bar.Green)
                                    {
                                        <MudSlider @bind-Value="bar.Green[bar.Green.IndexOf(green)].Value">Green @(bar.Green.IndexOf(green) + 1)</MudSlider>
                                    }
                                </MudContainer>
                            }
                        </MudItem>
                        <MudItem xs="12">
                            <MudButton Style="text-transform:none" OnClick="@(() => ShowSingleBarPanel[PM.Bar.IndexOf(bar)][4] = !ShowSingleBarPanel[PM.Bar.IndexOf(bar)][4])" EndIcon="@(ShowSingleBarPanel[PM.Bar.IndexOf(bar)][4] ? Icons.Material.Filled.ArrowUpward : Icons.Material.Filled.ArrowDownward)">
                                Blue
                            </MudButton>
                            @if (!ShowSingleBarPanel[PM.Bar.IndexOf(bar)][4])
                            {
                                <MudSlider Value="bar.Blue[0].Value" ValueChanged="@((double x) => bar.SetBlue((float)x))"/>
                            }
                            else
                            {
                                <MudContainer Style="background: #222f">
                                    @foreach (var blue in bar.Blue)
                                    {
                                        <MudSlider @bind-Value="bar.Blue[bar.Blue.IndexOf(blue)].Value">Blue @(bar.Blue.IndexOf(blue) + 1)</MudSlider>
                                    }
                                </MudContainer>
                            }
                        </MudItem>
                    </MudGrid>
                </MudContainer>
            }
        </MudContainer>
    }
</center>

@code {
    public bool ShowStrobePanel = false;
    public bool ShowParPanel = false;
    public List<bool> ShowBarPanel = new List<bool>() { false, false };
    public List<List<bool>> ShowSingleBarPanel = new List<List<bool>> { new List<bool> { false, false, false, false, false, false, false, false }, new List<bool> { false, false, false, false, false, false, false, false } };

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Global.Page = Page.Advanced;
    }

}